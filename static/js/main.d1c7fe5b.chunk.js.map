{"version":3,"sources":["services/CalculatorService.js","App.js","reportWebVitals.js","index.js"],"names":["CalculatorService","updatePreviousDisplay","previousValue","value","operator","previous","parseFloat","isNaN","display","toLocaleString","updateCurrentDisplay","currentValue","append","input","test","newValue","toString","setOperator","calculate","remove","slice","clear","result","current","this","myInstance","App","isDarkPreference","window","matchMedia","matches","useState","setPreviousValue","setCurrentValue","theme","setTheme","calculator","getInstance","useEffect","darkModeToggle","e","lightModeToggle","addEventListener","removeEventListener","handleClick","previousDisplay","currentDisplay","handleThemeChange","className","id","onClick","type","min","max","onChange","evt","target","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1c7fe5b.chunk.js","sourcesContent":["class CalculatorService {\r\n    static myInstance = null;\r\n    static getInstance() {\r\n        if (CalculatorService.myInstance == null) {\r\n            CalculatorService.myInstance = new CalculatorService();\r\n        }\r\n        return this.myInstance;\r\n    }\r\n\r\n    constructor() {\r\n        this.previousValue = { value: null, operator: null, display: null };\r\n        this.currentValue = { value: null, display: null };        \r\n    }\r\n\r\n    get previousDisplay() {\r\n        return this.previousValue.display;\r\n    }\r\n\r\n    get currentDisplay() {\r\n        return this.currentValue.display;\r\n    }\r\n\r\n    updatePreviousDisplay = () => {\r\n        const {value, operator} = this.previousValue;\r\n        const previous = parseFloat(value);\r\n        if (isNaN(previous)) {\r\n            this.previousValue.display = null;\r\n        } else {\r\n            this.previousValue.display = `${previous.toLocaleString()} ${operator}`;\r\n        }\r\n    };\r\n\r\n    updateCurrentDisplay = () => {\r\n        const value = parseFloat(this.currentValue.value);\r\n        if (isNaN(value)) {\r\n            this.currentValue.display = null;\r\n        } else {\r\n            this.currentValue.display = value.toLocaleString();\r\n        }\r\n    };\r\n\r\n    append = (input) => {\r\n        // only allow 1 decimal place\r\n        if (input === '.' && /\\./.test(this.currentValue.value)) { return; }\r\n        let newValue = `${this.currentValue.value || \"\"}${input.toString()}`;\r\n        this.currentValue.value = newValue;\r\n        this.updateCurrentDisplay();\r\n    };\r\n\r\n    setOperator = (input) => {\r\n        if (!this.previousValue.value) {\r\n            // set the new value as previous\r\n            this.previousValue.value = this.currentValue.value;\r\n            this.previousValue.operator = input;\r\n            this.currentValue.value = null;\r\n            this.updatePreviousDisplay();\r\n            this.updateCurrentDisplay();\r\n        } else if (!this.currentValue.value && /^[+\\-x/]$/.test(input)) {\r\n            // replace the operator\r\n            this.previousValue.operator = input;\r\n            this.updatePreviousDisplay();\r\n        } else {\r\n            this.calculate();\r\n        }\r\n    };\r\n    \r\n    remove = () => {\r\n        if (this.currentValue.value) {\r\n            this.currentValue.value = this.currentValue.value.toString().slice(0, -1);\r\n            this.updateCurrentDisplay();\r\n        }\r\n    };\r\n\r\n    clear = () => {\r\n        this.previousValue = { value: null, operator: null, display: null };\r\n        this.currentValue = { value: null, display: null };\r\n    };\r\n    \r\n    calculate = () => {\r\n        let result = null;\r\n        const previous = parseFloat(this.previousValue.value);\r\n        const current = parseFloat(this.currentValue.value);\r\n        switch(this.previousValue.operator) {\r\n            case '+':\r\n                result = previous + current;\r\n                break;\r\n            case '-':\r\n                result = previous - current;\r\n                break;\r\n            case 'x':\r\n                result = previous * current;\r\n                break;\r\n            case '/':\r\n                result = previous / current;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        this.clear();\r\n        this.currentValue.value = result.toString();\r\n        this.updatePreviousDisplay();\r\n        this.updateCurrentDisplay();\r\n    };\r\n};\r\n\r\nexport default CalculatorService;","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport CalculatorService from './services/CalculatorService';\n\nfunction App() {\n  const DEFAULT_THEME = 1;\n  let isDarkPreference = (window?.matchMedia && window?.matchMedia('(prefers-color-scheme: dark)').matches);\n  let isLightPreference = (window?.matchMedia && window?.matchMedia('(prefers-color-scheme: light)').matches);\n  const [previousValue, setPreviousValue] = useState();\n  const [currentValue, setCurrentValue] = useState(399981);\n  // NOTE: initially matches the 'prefers-color-scheme' (3 if dark, 1 otherwise [default])\n  // NOTE: due to the binary nature of dark/light preference, currently the only way to view theme-2 is manually\n  const [theme, setTheme] = useState((isDarkPreference ? 3 : DEFAULT_THEME));\n  // NOTE: using a singleton to keep React from losing state w/in the calculator\n  const calculator = CalculatorService.getInstance();\n\n  useEffect(() => {\n    const darkModeToggle = e => { if (e.matches) { setTheme(3) } };\n    const lightModeToggle = e => { if (e.matches) { setTheme(1)} };\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', darkModeToggle);\n    window.matchMedia('(prefers-color-scheme: light)').addEventListener('change', lightModeToggle);\n    return function clean() {\n      window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', darkModeToggle);\n      window.matchMedia('(prefers-color-scheme: light)').removeEventListener('change', lightModeToggle);\n    };\n  });\n\n  const handleClick = (input) => {\n    if (/^[0-9.]$/.test(input)) {\n      calculator.append(input);\n    } else if (/^[+\\-x/=]$/.test(input)) {\n      calculator.setOperator(input);\n    } else {\n      switch(input) {\n        case 'delete':\n          calculator.remove();\n          break;\n        case 'reset':\n          calculator.clear();\n          break;\n        default:\n          return;\n      }\n    }\n    setPreviousValue(calculator.previousDisplay);\n    setCurrentValue(calculator.currentDisplay);\n  };\n\n  const handleThemeChange = (value) => {\n    setTheme(+value);\n  };\n\n  return (\n    <div className={`app theme${theme}`}>\n      <div className=\"calculator-container\">\n        <header className=\"calculator-header\">\n            <h1 className=\"app-name\">calc</h1>\n            <div className=\"theme-chooser\">\n                <span className=\"theme-chooser-label\">THEME</span>\n                <div className=\"theme-controls\">\n                  <label id=\"theme-options\" className=\"theme-options\">\n                    <span className=\"theme-label\" onClick={() => handleThemeChange(1)}>1</span>\n                    <span className=\"theme-label\" onClick={() => handleThemeChange(2)}>2</span>\n                    <span className=\"theme-label\" onClick={() => handleThemeChange(3)}>3</span>\n                  </label>\n                  <input type=\"range\" min=\"1\" aria-valuemin=\"1\" max=\"3\" aria-valuemax=\"3\" value={theme} aria-valuenow={theme} onChange={(evt) => handleThemeChange(evt.target.value)} aria-label=\"Theme Options\" />\n                </div>\n            </div>\n        </header>\n\n        <div className=\"calculator-results\" role=\"main\" aria-label=\"Calculator Screen\">\n          <span className=\"previous-value\">{previousValue}</span>\n          <span className=\"current-value\">{currentValue}</span>\n        </div>\n\n        <div className=\"calculator-buttons\" role=\"main\" aria-label=\"Calculator Buttons\">\n          <button type=\"button\" className=\"seven\" onClick={() => handleClick(7)}>7</button>\n          <button type=\"button\" className=\"eight\" onClick={() => handleClick(8)}>8</button>\n          <button type=\"button\" className=\"nine\" onClick={() => handleClick(9)}>9</button>\n          <button type=\"button\" className=\"delete\" onClick={() => handleClick('delete')}>DEL</button>\n          <button type=\"button\" className=\"four\" onClick={() => handleClick(4)}>4</button>\n          <button type=\"button\" className=\"five\" onClick={() => handleClick(5)}>5</button>\n          <button type=\"button\" className=\"six\" onClick={() => handleClick(6)}>6</button>\n          <button type=\"button\" className=\"plus\" onClick={() => handleClick('+')}>+</button>\n          <button type=\"button\" className=\"one\" onClick={() => handleClick(1)}>1</button>\n          <button type=\"button\" className=\"two\" onClick={() => handleClick(2)}>2</button>\n          <button type=\"button\" className=\"three\" onClick={() => handleClick(3)}>3</button>\n          <button type=\"button\" className=\"minus\" onClick={() => handleClick('-')}>-</button>\n          <button type=\"button\" className=\"period\" onClick={() => handleClick('.')}>.</button>\n          <button type=\"button\" className=\"zero\" onClick={() => handleClick(0)}>0</button>\n          <button type=\"button\" className=\"divide\" onClick={() => handleClick('/')}>/</button>\n          <button type=\"button\" className=\"multiply\" onClick={() => handleClick('x')}>x</button>\n          <button type=\"button\" className=\"reset\" onClick={() => handleClick('reset')}>RESET</button>\n          <button type=\"button\" className=\"equals\" onClick={() => handleClick('=')}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}